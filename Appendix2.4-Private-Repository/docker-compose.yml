version: "3.8"

services:
  # docker private registry
  docker-registry:
    image: registry:2.8.3
    restart: always
    stdin_open: true
    tty: true
    container_name: docker-registry
    depends_on:
      - docker-auth
    environment:
      - REGISTRY_STORAGE_FILESYSTEM_ROOTDIRECTORY=/var/lib/registry
      - REGISTRY_AUTH=token
      - REGISTRY_AUTH_TOKEN_REALM=https://192.168.100.3:5001/auth
      - REGISTRY_AUTH_TOKEN_SERVICE="Docker registry"
      - REGISTRY_AUTH_TOKEN_ISSUER="Auth Service"
      - REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE=/ssl/server.crt
    volumes:
      - $PWD/ssl:/ssl
      - $PWD/docker_registry/data:/var/lib/registry
    ports:
      - "5000:5000"
    networks:
      docker-registry-net:
        ipv4_address: 192.168.100.2

  # docker auth
  docker-auth:
    image: cesanta/docker_auth:1.12
    restart: always
    stdin_open: true
    tty: true
    container_name: docker-auth
    command: /config/auth_config.yml
    volumes:
      - $PWD/config:/config:ro
      - $PWD/log/docker_auth:/logs
      - $PWD/ssl:/ssl
    ports:
      - "5001:5001"
    networks:
      docker-registry-net:
        ipv4_address: 192.168.100.3

  # docker registry frontend
  docker-registry-frontend:
    image: konradkleine/docker-registry-frontend:v2
    restart: always
    stdin_open: true
    tty: true
    container_name: docker-registry-frontend
    depends_on:
      - docker-registry
    environment:
      - ENV_DOCKER_REGISTRY_HOST=192.168.100.2
      - ENV_DOCKER_REGISTRY_PORT=5000
      - ENV_USE_SSL=yes
    volumes:
      - $PWD/ssl/server.crt:/etc/apache2/server.crt:ro
      - $PWD/ssl/server.key:/etc/apache2/server.key:ro
    ports:
      - "443:443"
    networks:
      docker-registry-net:
        ipv4_address: 192.168.100.4

# networks
networks:
  docker-registry-net:
    driver: bridge
    ipam:
      config:
        - subnet: 192.168.100.0/24

